plugins {
    id 'java'
    id 'application'
    id 'eclipse'
    id 'jacoco'
    id 'antlr'
}

repositories {
    maven {
        url "https://okamumu.github.io/JMTRandom/repository/"
        artifactUrls "https://okamumu.github.io/JMTRandom/repository/"
    }
    maven {
        url "https://okamumu.github.io/Jmatout/repository/"
        artifactUrls "https://okamumu.github.io/Jmatout/repository/"
    }
    jcenter()
}

configurations {
    compile {
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

dependencies {
//    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'
    compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'
    compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9'
    compile group: 'com.github.okamumu', name:'jmtrandom', version: '0.1.0'
    compile group: 'com.github.okamumu', name:'jmatout', version: '0.9.1'
    compile group: 'org.antlr', name: 'antlr4-runtime', version: '4.7.1'

    testImplementation group: 'junit', name:'junit', version: '4.12'
    antlr group: 'org.antlr', name:'antlr4', version:'4.7.1'
}

generateGrammarSource {
    maxHeapSize = "64m"

    // Keep a copy of generated sources
    // doLast {
    //     println "Copying generated grammar lexer/parser files to main directory."
    //     copy {
    //         from "${buildDir}/generated-src/antlr/main"
    //         into "generated-src/main/java"
    //     }
    // }
}

javadoc {
    options.locale = 'en_US'
}

def defaultEncoding = 'UTF-8'

compileJava {
  options.encoding = defaultEncoding
}

test {
    testLogging {
        events 'skipped', 'failed'
    }
}

version = "0.11.0"

// build docs director
task copyDocs(type: Copy, dependsOn:[javadoc]) {
    from 'build/docs/javadoc'
    into 'docs/javadoc'
}

// Define the main class for the application
mainClassName = 'com.github.okamumu.jspetrinet.App'
